apiVersion: v1
kind: ConfigMap
metadata: { name: player-config, namespace: ott-platform }
data:
  index.html: |
    <!doctype html><html><head><meta charset="utf-8"><title>OTT HLS Player</title>
    <script src="https://cdn.jsdelivr.net/npm/hls.js@latest"></script>
    <style>body{font-family:system-ui;margin:2rem} video{width:90%;max-width:960px}</style></head>
    <body><h2>OTT HLS Player</h2><video id="v" controls autoplay muted></video>
    <script>
      const v=document.getElementById('v');
      const url='http://cdn-edge-service.ott-platform.svc.cluster.local/media/demo/master.m3u8';
      if(Hls.isSupported()){const h=new Hls();h.loadSource(url);h.attachMedia(v);}else if(v.canPlayType('application/vnd.apple.mpegurl')){v.src=url;}
    </script></body></html>
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: hls-player-deployment, namespace: ott-platform, labels: { app: hls-player } }
spec:
  replicas: 1
  selector: { matchLabels: { app: hls-player } }
  template:
    metadata: { labels: { app: hls-player } }
    spec:
      containers:
      - name: player
        image: nginx:1.25-alpine
        ports: [ { containerPort: 80 } ]
        volumeMounts: [ { name: html, mountPath: /usr/share/nginx/html } ]
      volumes: [ { name: html, configMap: { name: player-config } } ]
---
apiVersion: v1
kind: Service
metadata: { name: hls-player-service, namespace: ott-platform }
spec:
  selector: { app: hls-player }
  ports: [ { name: http, port: 80, targetPort: 80 } ]
