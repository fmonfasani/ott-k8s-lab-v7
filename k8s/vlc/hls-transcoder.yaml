apiVersion: apps/v1
kind: Deployment
metadata: { name: hls-transcoder, namespace: ott-platform, labels: { app: hls-transcoder } }
spec:
  replicas: 1
  selector: { matchLabels: { app: hls-transcoder } }
  template:
    metadata: { labels: { app: hls-transcoder } }
    spec:
      volumes:
      - name: hls
        emptyDir: {}
      - name: video-src
        hostPath: { path: /ABSOLUTE/PATH/TO/video-source, type: Directory }  # TODO: usuario lo ajusta
      containers:
      - name: ffmpeg
        image: jrottenberg/ffmpeg:6.0-alpine
        command: ["/bin/sh","-c"]
        args:
          - >
            ffmpeg -re -stream_loop -1 -i /video/mi-video.mp4
            -c:v libx264 -preset veryfast -c:a aac -f hls
            -hls_time 4 -hls_list_size 0
            -hls_segment_filename /hls/seg_%03d.ts /hls/master.m3u8
        volumeMounts:
        - { name: hls, mountPath: /hls }
        - { name: video-src, mountPath: /video }
      - name: nginx
        image: nginx:1.25-alpine
        ports: [ { containerPort: 80 } ]
        volumeMounts:
        - { name: hls, mountPath: /usr/share/nginx/html/media/demo }
---
apiVersion: v1
kind: Service
metadata: { name: hls-transcoder-svc, namespace: ott-platform }
spec:
  selector: { app: hls-transcoder }
  ports: [ { name: http, port: 80, targetPort: 80 } ]
